(ns recipe-converter.core
    (:require [reagent.core :as reagent :refer [atom]]
              [reagent.session :as session]
              [secretary.core :as secretary :include-macros true]
              [accountant.core :as accountant]
              [clojure.string :as string]))

(def input-text (atom ""))
(def output-text (atom ""))

(defn convert-american-recipe [input-text]
  (swap! output-text (fn [] input-text)))

;; -------------------------
;; Views

(defn home-page []
  [:div [:h2 "Welcome to recipe converter"]
   [:p "Paste your American recipe here:"]
   [:textarea {:placeholder "input" :on-change #(reset! input-text (-> % .-target .-value)) }]
   [:textarea {:placeholder "output" :disabled true :value @input-text}]])

(defn current-page []
  [:div [(session/get :current-page)]])

;; -------------------------
;; Routes

(secretary/defroute "/" []
  (session/put! :current-page #'home-page))

;; -------------------------
;; Initialize app

(defn mount-root []
  (reagent/render [current-page] (.getElementById js/document "app")))

(defn init! []
  (accountant/configure-navigation!
    {:nav-handler
     (fn [path]
       (secretary/dispatch! path))
     :path-exists?
     (fn [path]
       (secretary/locate-route path))})
  (accountant/dispatch-current!)
  (mount-root))
